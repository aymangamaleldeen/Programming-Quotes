{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBC8D/BC,EA1DG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAgBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEE,KAAML,EACNM,QAAS,iBACP,yEAGJ,cAAC,EAAD,UACE,uBACEC,QAjBR,WACEN,GAAc,IAiBRP,UAAWC,IAAQa,KACnBC,SA1BR,SAA2BC,GACzBA,EAAMC,iBACN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MACzCrB,EAAMuB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAmB5C,UAKGtB,EAAM0B,WACL,qBAAKzB,UAAWC,IAAQyB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK3B,UAAWC,IAAQ2B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,OAEtC,sBAAKR,UAAWC,IAAQ2B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,OAEpC,qBAAKV,UAAWC,IAAQiC,QAAxB,SACE,wBAAQC,QAjClB,WACE5B,GAAc,IAgCyBP,UAAU,MAAzC,kC,gBC9BGoC,UAlBf,WACG,MAA8BC,YAAQC,KAAhCC,EAAN,EAAMA,YAAcC,EAApB,EAAoBA,OACfC,EAAUC,cAahB,OAXAC,qBAAU,WACM,cAATH,GACCC,EAAQG,KAAK,aAEnB,CAACJ,EAASC,IAOL,cAAC,EAAD,CAAWhB,UAAqB,YAAVe,EAAqBlB,WAJlD,SAAyBuB,GACzBN,EAAYM","file":"static/js/3.bebcdda2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Hclk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__12dvE\",\"loading\":\"QuoteForm_loading__1xNCz\",\"control\":\"QuoteForm_control__WvttZ\",\"actions\":\"QuoteForm_actions__3TAOB\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function focusHandler() {\n    setIsEntering(true);\n  }\n  function clickHandler() {\n    setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={() =>\n          \"Are you sure you want to leave ? All your entered data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={focusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={clickHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React ,{useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\"\r\nimport {addQuote} from \"../lib/api\"\r\n\r\nfunction NewQuote() {\r\n   const{sendRequest , status} = useHttp(addQuote,)\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n      if(status===\"completed\"){\r\n          history.push(\"/quotes\")\r\n      }\r\n  },[status , history])\r\n\r\n\r\n  function addQuoteHandler(quoteData) {\r\n  sendRequest(quoteData);\r\n  }\r\n\r\n  return <QuoteForm isLoading={status=== \"pending\"} onAddQuote={addQuoteHandler} />;\r\n}\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}